name: Build and Test
run-name: ${{ github.actor }} is learning Github Actions
on:
  pull_request:
    branches:
      - main
jobs:
  test:
    environment:
      name: test_env_variables
    env:
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRATION_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRATION_MINUTES}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      DATABASE_USER: ${{secrets.DATABASE_USER}}
      DATABASE: ${{secrets.DATABASE}}
      DATABASE_HOST: ${{secrets.DATABASE_HOST}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      TEST_DATABASE_PORT: ${{secrets.TEST_DATABASE_PORT}}
      TEST_DATABASE: ${{secrets.TEST_DATABASE}}
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.TEST_DATABASE}}
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: self-hosted
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Setting up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Installing dependencies
        run: pip install --upgrade pip && pip install pipenv && pipenv install --system --deploy --ignore-pipfile --dev

      - name: running tests
        run: pipenv run pytest -v

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapisql:latest
  
  test-deployment:
    needs: test
    environment:
      name: test_env_variables
    env:
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRATION_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRATION_MINUTES}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      DATABASE_USER: ${{secrets.DATABASE_USER}}
      DATABASE: ${{secrets.DATABASE}}
      DATABASE_HOST: ${{secrets.DATABASE_HOST}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_TOKEN: ${{secrets.DOCKERHUB_TOKEN}}
    runs-on: self-hosted
    steps:
    - name: Delete old docker container
      run: sudo docker rm -f fast-app || true
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}

    - name: Pull image
      run: docker pull ${{secrets.DOCKERHUB_USERNAME}}/fastapisql:latest
        
    - name: Run docker
      run: |
        docker run -d --name fast-app --network nabnetwork \
        -e ALGORITHM="${ALGORITHM}" \
        -e ACCESS_TOKEN_EXPIRATION_MINUTES="${ACCESS_TOKEN_EXPIRATION_MINUTES}" \
        -e SECRET_KEY="${SECRET_KEY}" \
        -e DATABASE_USER="${DATABASE_USER}" \
        -e DATABASE="${DATABASE}" \
        -e DATABASE_HOST="${DATABASE_HOST}" \
        -e DATABASE_PORT="${DATABASE_PORT}" \
        -e DATABASE_PASSWORD="${DATABASE_PASSWORD}" \
        -e DOCKERHUB_USERNAME="${DOCKERHUB_USERNAME}" \
        -e DOCKERHUB_TOKEN="${DOCKERHUB_TOKEN}" \
        ${{secrets.DOCKERHUB_USERNAME}}/fastapisql:latest