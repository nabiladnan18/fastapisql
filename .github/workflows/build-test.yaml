name: Build and Test
run-name: ${{ github.actor }} is learning Github Actions
on:
  pull_request:
    branches:
      - main
jobs:
  test:
    environment:
      name: test_env_variables
    env:
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRATION_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRATION_MINUTES}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      DATABASE_USER: ${{secrets.DATABASE_USER}}
      DATABASE: ${{secrets.DATABASE}}
      DATABASE_HOST: ${{secrets.DATABASE_HOST}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      TEST_DATABASE_PORT: ${{secrets.TEST_DATABASE_PORT}}
      TEST_DATABASE: ${{secrets.TEST_DATABASE}}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.TEST_DATABASE}}
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: self-hosted
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Setting up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Installing dependencies
        run: pip install --upgrade pip && pip install pipenv && pipenv install --system --deploy --ignore-pipfile --dev

      - name: running tests
        run: pipenv run pytest -v

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapisql:latest
  test-deployment:
    environment:
      name: test_env_variables
    runs-on: self-hosted
    steps:
      - name: Manage Docker Secrets
        run: |
          echo ${{secrets.ALGORITHM}} | docker secret create ALGORITHM -
          echo ${{secrets.ACCESS_TOKEN_EXPIRATION_MINUTES}} | docker secret create ACCESS_TOKEN_EXPIRATION_MINUTES -
          echo ${{secrets.SECRET_KEY}} | docker secret create SECRET_KEY -
          echo ${{secrets.DATABASE_USER}} | docker secret create DATABASE_USER -
          echo ${{secrets.DATABASE_HOST}} | docker secret create DATABASE_HOST -
          echo ${{secrets.DATABASE_PORT}} | docker secret create DATABASE_PORT -
          echo ${{secrets.DATABASE_PASSWORD}} | docker secret create DATABASE_PASSWORD -
          echo ${{ secrets.DOCKERHUB_USERNAME }} | docker secret create DOCKERHUB_USERNAME -
           
      
      - name: Deploy to Docker Swarm
        run: |
          docker service create --name fast-app --network defstack \
          --secret ALGORITHM \
          --secret ACCESS_TOKEN_EXPIRATION_MINUTES \
          --secret SECRET_KEY \
          --secret DATABASE_USER \
          --secret DATABASE_HOST \
          --secret DATABASE_PORT \
          --secret DATABASE_PASSWORD \
          --secret DOCKERHUB_USERNAME \
          --publish published=8080,target=80 \
          ${{ secrets.DOCKERHUB_USERNAME }}/fastapisql:latest
